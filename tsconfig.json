{
  "compilerOptions": {
    "target": "ESNext", // 최신 JS 기능(예: async/await, 옵셔널 체이닝 등)을 사용함
    "lib": ["DOM", "DOM.Iterable", "ESNext"], // 브라우저 관련 기능(DOM)과 최신 JS 기능 타입을 포함
    "jsx": "react-jsx", // React 17 이상에서 사용하는 JSX 변환 방식 (자동 import 방식)
    "module": "ESNext", // 모듈 시스템을 최신 ES 모듈 방식으로 설정 (import/export 사용)
    "moduleResolution": "Node", // 모듈을 node_modules 기준으로 찾도록 설정
    "resolveJsonModule": true, // .json 파일을 import 가능하게 함
    "isolatedModules": true, // 각 파일을 개별적으로 타입 검사 (Vite에서는 필수)
    "allowJs": true, // JS 파일도 프로젝트에 포함 (TS로 마이그레이션할 때 유용)
    "checkJs": false, // JS 파일에 대해서는 타입 검사를 하지 않음

    // TypeScript 컴파일러가 js 파일을 출력하지 않게 함 (빌드는 Vite가 수행)
    "noEmit": true, // 불필요한 js 파일 생성을 방지
    "esModuleInterop": true, // CommonJS 방식 모듈도 import/export 형태로 사용할 수 있게 함
    "allowSyntheticDefaultImports": true, // default export가 없는 모듈도 default import 형태로 사용할 수 있게 함
    "strict": true, // 엄격한 타입 체크 (null 체크 등 포함) - 버그를 사전에 방지
    "forceConsistentCasingInFileNames": true, // 대소문자를 구분하여 파일 이름을 처리 (운영체제 간 문제 방지)
    "skipLibCheck": true, // 외부 라이브러리의 타입 정의는 검사하지 않음 (빌드 속도 향상)

    // 절대 경로 import를 위한 기준 경로 설정
    "baseUrl": "./", // @/components 같이 짧고 명확한 import를 위해

    // @/ 로 시작하는 import 경로를 src/ 폴더로 매핑
    "paths": {
      "@/*": ["src/*"]
    },

    // 사용할 글로벌 타입 정의 파일 지정 (예: Vite, React 관련)
    "types": ["vite/client", "react", "react-dom"] // 전역 타입 충돌 예방
  },

  "include": ["src"], // TypeScript가 컴파일할 대상 폴더 설정
  "exclude": ["node_modules", "dist"] // 컴파일 제외 대상 (빌드 결과물과 외부 라이브러리)
}
